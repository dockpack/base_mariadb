---

- name: Count anonymous users.
  command: mysql -NBe 'SELECT count(User) FROM mysql.user WHERE User = ""'
  changed_when: no
  register: mysql_anoncount
  tags:
    - secure

- name: Remove the anonymous users.
  command: mysql -NBe 'DELETE FROM mysql.user WHERE User = ""'
  when: mysql_anoncount.stdout != '0'
  ignore_errors: yes
  tags:
    - secure

- name: Count passwordless users.
  command: mysql -NBe 'SELECT count(User) FROM mysql.user WHERE Password = ""'
  changed_when: no
  register: mysql_usercount
  tags:
    - secure

- name: Remove the passwordless users.
  command: mysql -NBe 'DELETE FROM mysql.user WHERE Password = ""'
  when: mysql_usercount.stdout != '0'
  changed_when: yes
  ignore_errors: yes
  tags:
    - secure

- name: Flush privileges.
  command: mysql -NBe 'FLUSH PRIVILEGES'
  when: mysql_usercount.stdout != '0' or mysql_anoncount.stdout != '0'
  changed_when: no
  ignore_errors: yes
  tags:
    - secure

- name: Create databases
  mysql_db:
    name: "{{ item.name }}"
    state: present
  loop: "{{ mariadb_databases }}"
  when: not item.delete|default(False)
  tags:
    - databases

- name: Grant local users to the databases
  mysql_user:
    name: "{{ item.name }}"
    password: "{{ item.pass }}"
    priv: "{{ item.name }}.*:ALL"
    append_privs: true
    state: present
  loop: "{{ mariadb_databases }}"
  when: item.ip is not defined and not item.delete|default(False)
  tags:
    - databases

- name: Grant remote users to the databases
  mysql_user:
    name: "{{ item.name }}"
    password: "{{ item.pass }}"
    host: "%"
    priv: "{{ item.name }}.*:ALL"
    state: present
    append_privs: false
  loop: "{{ mariadb_databases }}"
  when: item.ip is defined and not item.delete|default(False)
  tags:
    - databases
